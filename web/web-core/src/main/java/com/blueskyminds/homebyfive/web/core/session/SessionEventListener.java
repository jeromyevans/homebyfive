package com.blueskyminds.homebyfive.web.core.session;

/**
 *
 * Listens to session creation and destory events generated by the container.
 * A reference to each session is stored in a SessionRegistry available in the servlet context
 *
 * Date Started: 8/06/2007
 * <p/>
 * History:
 * <p/>
 * Copyright (c) 2007 Blue Sky Minds Pty Ltd<br/>
 */
import javax.servlet.http.HttpSessionListener;
import javax.servlet.http.HttpSessionEvent;
import javax.servlet.http.HttpSession;
import javax.servlet.ServletContext;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

public class SessionEventListener implements HttpSessionListener {

    public static final String KEY_SESSION_REGISTRY = "sessionRegistry";

    private static final Log LOG = LogFactory.getLog(SessionEventListener.class);

    public void sessionCreated(HttpSessionEvent ev) {
        LOG.info("Session created");
        HttpSession session = (HttpSession) ev.getSource();

        ServletContext servletContext = ev.getSession().getServletContext();
        addSession(servletContext, session);
    }

    public void sessionDestroyed(HttpSessionEvent ev) {
        LOG.info("Session destroyed");
        HttpSession session = (HttpSession) ev.getSource();

        ServletContext servletContext = ev.getSession().getServletContext();
        removeSession(servletContext, session);
    }

    /** Record that a session has been started */
    private void addSession(ServletContext servletContext, HttpSession session) {
        SessionRegistry sessionRegistry = getSessionRegistry(servletContext);
        if (sessionRegistry != null) {
            sessionRegistry.addSession(session);
        }
    }

    /** Record that a session has been started */
    private void removeSession(ServletContext servletContext, HttpSession session) {
        SessionRegistry sessionRegistry = getSessionRegistry(servletContext);
        if (sessionRegistry != null) {
            sessionRegistry.removeSession(session);
        }
    }

    /** Get the SessionRegistry from the servlet context
     *
     * If the SessionRegistry is not defined, a new instance is created in the ServletContext with
     * a key of KEY_SESSION_REGISTRY
     *
     * */
    private SessionRegistry getSessionRegistry(ServletContext servletContext) {
        SessionRegistry sessionRegistry = (SessionRegistry) servletContext.getAttribute(KEY_SESSION_REGISTRY);
        if (sessionRegistry == null) {
            sessionRegistry = new SessionRegistry();
            servletContext.setAttribute(KEY_SESSION_REGISTRY, sessionRegistry);
        }
        return sessionRegistry;
    }
}
