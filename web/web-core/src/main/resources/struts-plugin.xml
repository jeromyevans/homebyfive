<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
    "http://struts.apache.org/dtds/struts-2.0.dtd">

<struts>
  <!--
  Register the TagLibrary with the Container.
  The TemplateEngine will detect this library and make the published directives/models available to other FreeMarker and Velocity
  tags/templates 
  -->
  <bean type="org.apache.struts2.views.TagLibrary" name="hp" class="com.blueskyminds.homebyfive.web.struts2.views.HomeByFiveTagLibrary" />

  <!-- Store authenticated tokens in the Session -->
   <bean type="com.blueskyminds.homebyfive.web.struts2.security.token.TokenRegistry"  class="com.blueskyminds.homebyfive.web.struts2.security.token.SessionMapTokenRegistry"/>

   <bean name="headerToken" type="com.blueskyminds.homebyfive.web.struts2.security.token.TokenInspector"  class="com.blueskyminds.homebyfive.web.struts2.security.token.HttpHeaderTokenInspector"/>
   <bean name="cookieToken" type="com.blueskyminds.homebyfive.web.struts2.security.token.TokenInspector" class="com.blueskyminds.homebyfive.web.struts2.security.token.CookieTokenInspector"/>
   <bean name="default" type="com.blueskyminds.homebyfive.web.struts2.security.token.TokenInspector" class="com.blueskyminds.homebyfive.web.struts2.security.token.CompositeTokenInspector" />

   <!-- Define the implementations used to read the token for the Invocation -->
   <constant name="securityplugin.compositeTokenInspector" value="headerToken, cookieToken"/>

   <bean type="com.blueskyminds.homebyfive.web.struts2.security.signature.SignatureHandler" class="com.blueskyminds.homebyfive.web.struts2.security.signature.SignatureHandlerImpl"/>

  <!-- Use the customised json processor -->
   <bean name="myJson" type="org.apache.struts2.rest.handler.ContentTypeHandler" class="com.blueskyminds.homebyfive.web.struts2.JsonLibContentTypeHandler" />
   <bean name="myXML" type="org.apache.struts2.rest.handler.ContentTypeHandler" class="com.blueskyminds.homebyfive.web.struts2.XStreamContentTypeHandler" />
   <constant name="struts.rest.handlerOverride.json" value="myJson"/>
   <constant name="struts.rest.handlerOverride.xml" value="myXML"/>
  
   <package name="auth-default" extends="rest-default">

     <interceptors>
       <interceptor name="tokenAuthorization" class="com.blueskyminds.homebyfive.web.struts2.security.interceptors.TokenAuthorizationInterceptor"/>
       <interceptor name="checkSignature" class="com.blueskyminds.homebyfive.web.struts2.security.interceptors.CheckSignatureInterceptor"/>
       <interceptor name="rolesAllowed" class="com.blueskyminds.homebyfive.web.struts2.security.interceptors.RolesAllowedInterceptor"/>
     </interceptors>

     <global-results>
       <result name="methodNotSupported" type="httpheader">
         <param name="error">405</param>
         <param name="errorMessage">The requested method is unsupported</param>
       </result>
       <result name="unauthorized" type="httpheader">
         <param name="error">401</param>
         <param name="errorMessage">Access to the requested resource was denied (unauthorized)</param>
       </result>
       <result name="rejectSignature" type="httpheader">
         <param name="error">401</param>
         <param name="errorMessage">Unauthorized request: invalid signature</param>
       </result>
       <result name="exceptionReport" type="httpheader">
        <param name="error">400</param>
        <param name="errorMessage">The server reported an error: ${exception.message}</param>
       </result>
       <!-- default handling of common results -->
       <!--<result name="success" type="httpheader">-->
         <!--<param name="status">200</param>-->
       <!--</result>-->
     </global-results>

      <global-exception-mappings>
        <exception-mapping exception="java.lang.NoSuchMethodException" result="methodNotSupported"/>
        <exception-mapping exception="java.lang.IllegalArgumentException" result="methodNotSupported"/>
        <exception-mapping exception="java.lang.Throwable" result="exceptionReport"/>        
     </global-exception-mappings>

   </package>
  
</struts>